КОНЦЕПЦИИ.



КОНЦЕПЦИЯ РЕЛИЗАЦИИ ПОСТОЯННОЙ ПАМЯТИ И РАБОТЫ С НЕЙ
    Доступные варианты:
        1) работа с QLiteDatabase (здесь и везде далее БД)
        2) работа с MemoryModule (англ. - модуль памяти) (здесь и везде далее МП)
        3) Гибрид (1) и (2) (см. описание ниже)
    Выбранный вариант:
        Гибрид
    Принципы работы Гибрида:
        1) При старте вся информация копируется в МП
        2) В процессе работы приложения память в МП и БД должна поддерживаться
            в идентичном виде.
    Некоторые моменты работы Гибрида:
        1) Элементарные изменения памяти (которые легко внести в БД) вносятся в МП и БД параллельно
            параллельно и независимо друг от друга.
        2) Глобальные изменения памяти (которые тяжело внести в БД) вносятся в память след. образом:
            2.1) Внесение изменений в МП
            2.2) Очистка содержимого БД (до требуемого уровня)
            2.3) Заполнение БД данными, копируемыми из МП
            Пункты 2.2 и 2.3 следует производить в одну транзакцию, чтобы избежать потери памяти
                при наружении работы приложения.
    Достоинства Гибрида:
        1) Более высокая скорость работы на элементарных операциях по сравнению с "работой с БД"
        2) Надежность хранения информации равная надежности "работе с БД"
        3) Скорость чтения информации равная скорости чтения в "работе с МП"
    Недостатки Гибрида:
        1) Повышенная сложность реализации (порядка 2х раз - некритично)
        2) Уменьшена скорость работы по сравнению с "работой с БД" и "работой с МП" в отдельности
            (малое число данных, низкая потребность в быстродействии - некритично) (к тому же
            все потери времени с легкостью компенсируются достоинствами Гибрида)
     Обоснование выбора:
        1) До накатки на БД вся основная логика приложения была выстроена на основе работы с МП,
            поэтому полный переход логики на работу с БД очень сложен и требует практически полной
            переписи рабочей части всего кода. К тому же рабочие активити приложения часто
            отображают практически полную информацию по памяти (например CalculationActivity,
            которое отображается на основе ВСЕХ ДАННЫХ), и постоянное обращение к БД было бы
            слишком затратным)
        2) Чистая работа с МП подразумевает под собой при старте копию данных из БД в МП, затем
            внесения всех изменений в МП, а по завершению приложения - перезаписи всех данных в БД.
            Т.к. приложения имеют свойство закрываться "криво" или крашиться (особенно "сырые"
            версии), то момент перезаписи данных из МП в БД имеет большой риск быть упущенным,
            что чревато потерями данных.
        3) Режим Гибрида за счет некритичных недостатков с легкостью кроет ВСЕ критичные недостатки
            обоих других режимов работы, поэтому выбран именно он.
